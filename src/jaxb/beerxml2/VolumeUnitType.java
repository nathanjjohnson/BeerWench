//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.03.19 at 02:00:16 PM MDT 
//


package jaxb.beerxml2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for VolumeUnitType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * <simpleType name="VolumeUnitType">
 *   <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     <enumeration value="ml"/>
 *     <enumeration value="l"/>
 *     <enumeration value="tsp"/>
 *     <enumeration value="tbsp"/>
 *     <enumeration value="ozfl"/>
 *     <enumeration value="cup"/>
 *     <enumeration value="pt"/>
 *     <enumeration value="qt"/>
 *     <enumeration value="gal"/>
 *     <enumeration value="bbl"/>
 *     <enumeration value="iozfl"/>
 *     <enumeration value="ipt"/>
 *     <enumeration value="iqt"/>
 *     <enumeration value="igal"/>
 *     <enumeration value="ibbl"/>
 *   </restriction>
 * </simpleType>
 * </pre>
 * 
 */
@XmlType(name = "VolumeUnitType")
@XmlEnum
public enum VolumeUnitType {

    @XmlEnumValue("ml")
    ML("ml"),
    @XmlEnumValue("l")
    L("l"),
    @XmlEnumValue("tsp")
    TSP("tsp"),
    @XmlEnumValue("tbsp")
    TBSP("tbsp"),
    @XmlEnumValue("ozfl")
    OZFL("ozfl"),
    @XmlEnumValue("cup")
    CUP("cup"),
    @XmlEnumValue("pt")
    PT("pt"),
    @XmlEnumValue("qt")
    QT("qt"),
    @XmlEnumValue("gal")
    GAL("gal"),
    @XmlEnumValue("bbl")
    BBL("bbl"),
    @XmlEnumValue("iozfl")
    IOZFL("iozfl"),
    @XmlEnumValue("ipt")
    IPT("ipt"),
    @XmlEnumValue("iqt")
    IQT("iqt"),
    @XmlEnumValue("igal")
    IGAL("igal"),
    @XmlEnumValue("ibbl")
    IBBL("ibbl");
    private final String value;

    VolumeUnitType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static VolumeUnitType fromValue(String v) {
        for (VolumeUnitType c: VolumeUnitType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
